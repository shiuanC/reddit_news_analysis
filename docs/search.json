[
  {
    "objectID": "appendix.html",
    "href": "appendix.html",
    "title": "Appendix",
    "section": "",
    "text": "Appendix"
  },
  {
    "objectID": "summary.html#about-the-team",
    "href": "summary.html#about-the-team",
    "title": "Introduction",
    "section": "About the Team",
    "text": "About the Team\n\nLucienne L. Julian      Sonali Subbu Rathinam   Peijin Li"
  },
  {
    "objectID": "goals.html",
    "href": "goals.html",
    "title": "Business Goals",
    "section": "",
    "text": "Business Goal -1 : First EDA Q\n\n Technical proposal:  Technical ans 1\n\n\n \n\n Business Goal - 2 : 2 EDA Q \n\nTechnical Proposal : In order to perform time series analysis, the timestamp of the observation’s creation will be used. We will then visualize and analyze the frequency of posting on each date value.\n\n\n \n\n Business Goal - 3 : 3 EDA Q \n\nTechnical proposal : The most popular submissions can be derived from the score variable. The most shared news sites can be found by aggregating on the domain column and examining the number of posts, comments, posts in the top 100, and the average scores. Live threads can be obtained using regex on the title column by applying an appropriate search term.\n\n\n \n\nBusiness Goal - 4 : We plan to examine the most repetitive words in the comments under the top 5 news stories in the subreddit. \n\nTechnical Proposal : By sorting on the “score” column from the dataset, the most popular subreddits can be found. Then word clouds can be created to explore the most frequent words in the comments of the each of the top five submissions. These visualizations give a take-away of the popular topics in the subreddit.\n\n\n \n\nBusiness Goal - 5 : Given the prominence of the Russia-Ukraine Conflict, we wish to see if the r/worldnews subreddit captured all events it. \n\nTechnical Proposal:  In order to compare posts regarding the Russia-Ukraine conflict, the ACLED (Armed Conflict Location and Event Data Project) data is proposed to be used. Using terms relevant for war-related events, we can create dummy variables for each news posting and find daily counts of event type. Then, both the datasets will be merged on the event date, and their counts will be compared using apt proximity measures.\n\n\n \n\n\n\n\nBusiness Goal - 6 : We wish to see what the main topics in the submissions of the subreddit are. \n\nTechnical Proposal: In order to identify the major topics under submissions related to the Russia-Ukraine Conflict, topic modeling with LDA will be performed. Particularly, the LDA method for topic modeling will be used as its results are based on conditional probability estimates.\n\n\n \n\nBusiness Goal - 7 : We will examine what the key entities in the submissions are and what categories they can be classified to? \n\nTechnical Proposal : Named Entity recognition will be performed using pre-trained models available in johnsnow labs. We shall identify standard categories in the text data such as person’s name, geographic locations, and organizations.\n\n\n \n\nBusiness Goal - 8 : From previous analysis it was determined that the live threads were tied to the Russia-Ukraine Conflict. Given such a high stakes topic, we are curious to see how the user base reacted to it. To do so we plan on determining the comment sentiments. \n\nTechnical Proposal : For conducting sentiment analysis, we will use pretrained models from johnsnow labs. We will attempt several models to see comparative results, so as to verify our findings.\n\n\n \n\n\n\n\nBusiness Goal - 9 : Building on the pre-trained model results, we wish to develop a lexicon based sentiment model using our data. This will allow us to apply sentiment labels to our data and apply supervised learning models enabling better model evaluation. \n\nTechnical Proposal : After labelling the dataset using vader sentiment lexicon, it is possible to train supervised models using the sentiment labels as the target variable. A portion of the data will be used in sentiment analysis to obtain the required labels and the remaining data can be labelled by the trained supervised learning models.\n\n\n \n\nBusiness Goal - 10 : We plan on generating a model that will predict controversiality based on the text data. \n\nTechnical Proposal : The text data will undergo tfidf weighting. After this, the text will be used as an input to predict what the controversiality is.\n\n\n \n\n\n\n\nBusiness Goal - 11 : Karma scores can often influence any user’s actions on a particular subreddit. We wish to see if individual user Karma scores can be predicted by the variables in our dataset?\n\nTechnical Proposal: Using the scores in the comments dataset as our target variable, we plan to construct a number of predictors from the dataset such as number of submissions or comments posted, number of gilded comments etc to predict the score value.",
    "crumbs": [
      "I. Overview",
      "Business Goals"
    ]
  },
  {
    "objectID": "goals.html#exploratory-data-analysis-goals",
    "href": "goals.html#exploratory-data-analysis-goals",
    "title": "Business Goals",
    "section": "",
    "text": "Business Goal -1 : First EDA Q\n\n Technical proposal:  Technical ans 1\n\n\n \n\n Business Goal - 2 : 2 EDA Q \n\nTechnical Proposal : In order to perform time series analysis, the timestamp of the observation’s creation will be used. We will then visualize and analyze the frequency of posting on each date value.\n\n\n \n\n Business Goal - 3 : 3 EDA Q \n\nTechnical proposal : The most popular submissions can be derived from the score variable. The most shared news sites can be found by aggregating on the domain column and examining the number of posts, comments, posts in the top 100, and the average scores. Live threads can be obtained using regex on the title column by applying an appropriate search term.\n\n\n \n\nBusiness Goal - 4 : We plan to examine the most repetitive words in the comments under the top 5 news stories in the subreddit. \n\nTechnical Proposal : By sorting on the “score” column from the dataset, the most popular subreddits can be found. Then word clouds can be created to explore the most frequent words in the comments of the each of the top five submissions. These visualizations give a take-away of the popular topics in the subreddit.\n\n\n \n\nBusiness Goal - 5 : Given the prominence of the Russia-Ukraine Conflict, we wish to see if the r/worldnews subreddit captured all events it. \n\nTechnical Proposal:  In order to compare posts regarding the Russia-Ukraine conflict, the ACLED (Armed Conflict Location and Event Data Project) data is proposed to be used. Using terms relevant for war-related events, we can create dummy variables for each news posting and find daily counts of event type. Then, both the datasets will be merged on the event date, and their counts will be compared using apt proximity measures.",
    "crumbs": [
      "I. Overview",
      "Business Goals"
    ]
  },
  {
    "objectID": "goals.html#natural-language-processing-goals",
    "href": "goals.html#natural-language-processing-goals",
    "title": "Business Goals",
    "section": "",
    "text": "Business Goal - 6 : We wish to see what the main topics in the submissions of the subreddit are. \n\nTechnical Proposal: In order to identify the major topics under submissions related to the Russia-Ukraine Conflict, topic modeling with LDA will be performed. Particularly, the LDA method for topic modeling will be used as its results are based on conditional probability estimates.\n\n\n \n\nBusiness Goal - 7 : We will examine what the key entities in the submissions are and what categories they can be classified to? \n\nTechnical Proposal : Named Entity recognition will be performed using pre-trained models available in johnsnow labs. We shall identify standard categories in the text data such as person’s name, geographic locations, and organizations.\n\n\n \n\nBusiness Goal - 8 : From previous analysis it was determined that the live threads were tied to the Russia-Ukraine Conflict. Given such a high stakes topic, we are curious to see how the user base reacted to it. To do so we plan on determining the comment sentiments. \n\nTechnical Proposal : For conducting sentiment analysis, we will use pretrained models from johnsnow labs. We will attempt several models to see comparative results, so as to verify our findings.",
    "crumbs": [
      "I. Overview",
      "Business Goals"
    ]
  },
  {
    "objectID": "goals.html#machine-learning-goals",
    "href": "goals.html#machine-learning-goals",
    "title": "Business Goals",
    "section": "",
    "text": "Business Goal - 9 : Building on the pre-trained model results, we wish to develop a lexicon based sentiment model using our data. This will allow us to apply sentiment labels to our data and apply supervised learning models enabling better model evaluation. \n\nTechnical Proposal : After labelling the dataset using vader sentiment lexicon, it is possible to train supervised models using the sentiment labels as the target variable. A portion of the data will be used in sentiment analysis to obtain the required labels and the remaining data can be labelled by the trained supervised learning models.\n\n\n \n\nBusiness Goal - 10 : We plan on generating a model that will predict controversiality based on the text data. \n\nTechnical Proposal : The text data will undergo tfidf weighting. After this, the text will be used as an input to predict what the controversiality is.",
    "crumbs": [
      "I. Overview",
      "Business Goals"
    ]
  },
  {
    "objectID": "goals.html#future-goals",
    "href": "goals.html#future-goals",
    "title": "Business Goals",
    "section": "",
    "text": "Business Goal - 11 : Karma scores can often influence any user’s actions on a particular subreddit. We wish to see if individual user Karma scores can be predicted by the variables in our dataset?\n\nTechnical Proposal: Using the scores in the comments dataset as our target variable, we plan to construct a number of predictors from the dataset such as number of submissions or comments posted, number of gilded comments etc to predict the score value.",
    "crumbs": [
      "I. Overview",
      "Business Goals"
    ]
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "We assessed the basic specifications of the dataset, removed duplicates and anomalies and dropped undesired columns to finally get 170,144 submissions and 18,548,934 comments in the respective datasets. The variables of interest after preprocessing the datasets are listed below:\nIn the  Submissions  dataset :\n\n\n\nauthor : The user who created the post.\n\n\ncreated_utc : The time the submission or comment was posted. Was used in the time series analysis section of our project.\n\n\ndomain : The news site posted in the submission.\n\n\nid : The unique identifier of each post.\n\n\nnum_comments : The number of comments under each submission. This may not capture the exact picture as it is dependent on the day the data was retrieved.\n\n\nurl : The url associated with the post. Most of the submissions contain this url to the news article.\n\n\nscore : The Karma score awarded to each post\n\n\nIn the  Comments  dataset :\n\n\n\nauthor : The user who posted the comment.\n\n\ncreated_utc : The time the submission or comment was posted. Was used in the time series analysis section of our project.\n\n\nbody : The text in the comment.\n\n\n id : The unique identifier of each comment.\n\n\nlink_id : The id of the submission under which the comment exists.\n\n\ncontroversiality : Whether a comment was classified as ‘controversial’.\n\n\n gilded : Whether the comments have been gilded or awarded.\n\n\n distinguished : Whether the comments have been distinguished as moderator.\n\n\n score : The Karma score awarded to each post\n\n\nDuring this process, several dummy variables were created to aid in our analysis. A foreign key like variable called submission_id was also created in the comments dataset, that linked any comment to the submission it was made under.",
    "crumbs": [
      "Exploratory Data Analysis",
      "Exploratory Data Analysis"
    ]
  },
  {
    "objectID": "eda.html#preprocessing-and-data-dictionary",
    "href": "eda.html#preprocessing-and-data-dictionary",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "We assessed the basic specifications of the dataset, removed duplicates and anomalies and dropped undesired columns to finally get 170,144 submissions and 18,548,934 comments in the respective datasets. The variables of interest after preprocessing the datasets are listed below:\nIn the  Submissions  dataset :\n\n\n\nauthor : The user who created the post.\n\n\ncreated_utc : The time the submission or comment was posted. Was used in the time series analysis section of our project.\n\n\ndomain : The news site posted in the submission.\n\n\nid : The unique identifier of each post.\n\n\nnum_comments : The number of comments under each submission. This may not capture the exact picture as it is dependent on the day the data was retrieved.\n\n\nurl : The url associated with the post. Most of the submissions contain this url to the news article.\n\n\nscore : The Karma score awarded to each post\n\n\nIn the  Comments  dataset :\n\n\n\nauthor : The user who posted the comment.\n\n\ncreated_utc : The time the submission or comment was posted. Was used in the time series analysis section of our project.\n\n\nbody : The text in the comment.\n\n\n id : The unique identifier of each comment.\n\n\nlink_id : The id of the submission under which the comment exists.\n\n\ncontroversiality : Whether a comment was classified as ‘controversial’.\n\n\n gilded : Whether the comments have been gilded or awarded.\n\n\n distinguished : Whether the comments have been distinguished as moderator.\n\n\n score : The Karma score awarded to each post\n\n\nDuring this process, several dummy variables were created to aid in our analysis. A foreign key like variable called submission_id was also created in the comments dataset, that linked any comment to the submission it was made under.",
    "crumbs": [
      "Exploratory Data Analysis",
      "Exploratory Data Analysis"
    ]
  },
  {
    "objectID": "eda.html#analyzing-user-activity",
    "href": "eda.html#analyzing-user-activity",
    "title": "Exploratory Data Analysis",
    "section": "Analyzing User Activity",
    "text": "Analyzing User Activity\nIn this section, we dig a little deeper into how users act on this subreddit. Currently this subreddit currently has 31.5 subscribers. Upon evaluation however, we found that only around 27000 users created submissions and around 1.2 million users commented in the past year. Out of these numbers, only a small proportion of users actively posted as evidenced by figure 2.1 below.\nFigure 2.1 assesses the percentage of users posting monthly among total distinct users in the respective datasets. It is observed that a higher proportion of users commented on posts as compared to making a post themselves. In both cases however, less than half of distinct users were active monthly.\nThe top 10 posters and commenters were also found and users with the most controversial comments were evaluated. This was compared against the users’ total gilded and distinguished comments as shown below in table 2.1.\n Table 2.1 Comparison of Users With Most Number of Controversial Comments \nEfforts were made to identify if high controversiality led to higher number of gilded or distinguished but that was not the case.",
    "crumbs": [
      "Exploratory Data Analysis",
      "Exploratory Data Analysis"
    ]
  },
  {
    "objectID": "eda.html#time-series-analysis",
    "href": "eda.html#time-series-analysis",
    "title": "Exploratory Data Analysis",
    "section": "Time Series Analysis",
    "text": "Time Series Analysis\nThe next step to understanding the trends within the datasets was to plot multiple time series graph. Much like figure 1.2, a daily submission and comments frequency graph was also plotted as shown below.\nThere are some points of interest evident in the plot above. The first is the occurance of temporal gaps in the data which could be attributed to the data collection process of the push-shift reddit dataset. Second, there is a peak in Submissions and Comments in late February, and upon marking the start date of the Russia-Ukraine Conflict on the chart, it is apparent that this high volume of submissions and comments could have stemmed from the ongoing war.\nExporing further into this, the datasets were filtered to retain only observations regarding the conflict. After visualizing monthly frequencies of occurrences, it was found that the patterns observed in figure 2.3 were almost identical to the ones present in figure 1.2. This corroborates our earlier findings about increased activity in the subreddit during different phases of the Russia-Ukraine conflict.\nKarma scores often determine user activity in any subreddit. In order to identify the overall popularity of submissions, their scores quantiles per month were visualized. Scores are the difference between the number of upvotes and number of downvotes that a submission receives. From the median line in the visualization, it can be interpreted that most submissions have a score between 10-30. Since the 25th percentile remains 0 for all the months, it can be inferred that there are submissions (although few) with an overall negative score. The scores from the 75th percentile line reveal that there are submissions with very high overall scores as well. Additionally, these high overall scores per month do not follow any similar trend to the median data, indicating that there may be a handful of submissions that contribute to a very high overall score in a particular month.\nFinally, to further capture trends in submission posts, the monthly frequencies of five authors with the highest number of submissions in this time-period were visualized. From the graph, it can be inferred that some of the authors’ changes over time resemble the overall submission frequency plot. However, two other authors had submissions only during some months in the year. Infact, hieronymusanonymous’s submission frequencies were only during the second half of the year, indicating that there might be authors who did not post much about the Russia-Ukraine conflict.",
    "crumbs": [
      "Exploratory Data Analysis",
      "Exploratory Data Analysis"
    ]
  },
  {
    "objectID": "eda.html#most-shared-news-stories",
    "href": "eda.html#most-shared-news-stories",
    "title": "Exploratory Data Analysis",
    "section": "Most Shared News Stories",
    "text": "Most Shared News Stories\nFrom the preceding analysis, a sharp peak was observed in the submissions and comments frequencies which we propose is due the ongoing Russia_Ukraine conflict. The following analysis looks at the most highly scored news stories, the news sites that occur most in the submissions dataset, the presence of a live thread, and whether this would reveal anything on the surge of news articles shared on this subreddit.\nUpon analysis, it was found that the top 10 news stories were generally to do with Russia’s war on Ukraine. This provided us key insight to look more closely at the data pertaining to war efforts. The top news sites were also evaluated and an aggregation table was generated as shown below.\n Table 2.2 : Top 20 News Sources in the Subreddit \nIt was observed from the table above, that the most popular news sites on the subreddit over the past year were generally from western countries. This could potentially explain the high consumption of news related to the war within the subreddit despite the presence of Russian media sources as well.\nLive thread submissions were found and it was determined that all the live thread submissions pertained to the war. This provided an opportunity to evaluate the comments of the live thread against regular submissions that also dealt with the Conflict as shown in the table below.\n Table 2.3 : Comparison of Live Thread Comments and Regular Comments on War \nThe table above captures the percentage of comments that were controversial, gilded and distinguished for the live thread and for other submissions dealing with the war. It was observed that more controversiality was present in regular submissions as compared to live threads, possible due to larger number of normal posts.",
    "crumbs": [
      "Exploratory Data Analysis",
      "Exploratory Data Analysis"
    ]
  },
  {
    "objectID": "eda.html#most-common-words",
    "href": "eda.html#most-common-words",
    "title": "Exploratory Data Analysis",
    "section": "Most Common Words",
    "text": "Most Common Words\nProgressing with our analysis, we also looked at which were the most commonly used words or phrases in the comments of the top 3 news stories. To evaluate this we generated word clouds as shown below.\n\nFigure 2.6 : Word Cloud Of Comments From Top 3 News Stories\n\nThese word clouds revealed that the Russia-Ukraine Conflict , and political leaders of these countries were the most repeated words. We also found terms relating to Queen Elizabeth II’s demise and the British royal family to be quite repetitive.",
    "crumbs": [
      "Exploratory Data Analysis",
      "Exploratory Data Analysis"
    ]
  },
  {
    "objectID": "eda.html#comparison-with-other-sources",
    "href": "eda.html#comparison-with-other-sources",
    "title": "Exploratory Data Analysis",
    "section": "Comparison with Other Sources",
    "text": "Comparison with Other Sources\nAs a final task, we sought to compare the information present in the subreddit’s submissions about the events pertaining to Russia and Ukraine, with the events data from Armed Conflict Location & Event Data Project (ACLED). ACLED collects real-time data on locations, dates, actors, fatalities and types of all reported political violence and protest events around the world, from various international and regional news sources. The ACLED data for Ukraine and Russia were aggregated to obtain daily counts of event types in the following categories:\n\n\nArmed Clashes\n\n\nShelling/Artillery/Missile Attacks\n\n\nRemote Explosives/Landmines/IED\n\n\nDisrupted Weapons Use\n\n\nThe submissions titles were analyzed using regex to find terms related to aforementioned event types to obtain daily counts for these events. The cosine similarity between ACLED counts and counts obtained from submissions for each event type were found as shown below in table 2.4. Our results indicate that reddit data is not quite similar to ACLED data. One possible reason for low similarity might be that our data has been filtered to English, and ACLED uses its own translation methodology and produces regional level news related to the conflict as well.\n Table 2.4 : Cosine Similarity Scores for ACLED and Submissions Dataset on Different War Events",
    "crumbs": [
      "Exploratory Data Analysis",
      "Exploratory Data Analysis"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "Conclusion",
    "section": "",
    "text": "This project aimed to analyze the comments and posts on the r/worldnews subreddit through natural language processing (NLP) and machine learning (ML) techniques. In our Exploratory Data Analysis (EDA), we identified what news sites were primarily shared on the subreddit, via aggregated submission counts; began seeing what stories were most popular, based on karma scores; found that the discussion threads were heavily tied to the Russia-Ukraine Conflict; and examined the distribution of comments and submissions over time. We noted that several of the shared sites were American in origin, but also saw that many of the popular sources came from several European countries, including Russia. Other social media sites were also a popular submission choice, especially YouTube. Using the ACLED data, we were also able to determine that while the conflict was receiving a large share of attention, not all of the events of the conflict were being shared equally. Additionally, the time series analysis saw that there were multiple gaps in the dataset for certain time periods.\n Table 5.1 : Most Shared News Sites \nIn the NLP stage of our analysis, we chose to look closer at the topics and entities that the submissions were about, as well as examine the sentiment of both the comments and submissions. In our topic modelling we found that using the whole data resulted in groups with substantial amounts of overlap regarding the conflict. We then constrained the data to time periods that saw high amounts of search interest in Google Trends, creating two subsets which included posts and comments that occurred up to two weeks after the designated event’s date. The resulting subsetted data produced clearer topic groups, with specific events being highlighted, although the cluster of groups which were hard to differentiate remained. For the sentiment analysis at this stage, we used pretrained models from JohnSnowLabs to examine both the sentiment of the comments in the threads as well as comments and submission titles related to the Russia-Ukraine Conflict. Of the three different models used, Twitter and IMDB had identical results while the Vivek model registered a larger portion of the comments and submissions as neutral, but all three models indicated negative sentiment as the plurality of sentiments, if not the majority. The live threads’ results indicated strong sentiments, both positive and negative across the comments, a pattern which seemed to hold in the comments of submissions. The article titles, however, demonstrate much greater negativity according to the IMDB and Twitter models, while the Vivek model read it as again having more neutrality.\n Table 5.2 : Pre-Trained Models Sentiment Results on Comments and Submissions \nLastly, we have successfully designed and implemented predictive ML models to predict controversiality markers and the sentiment of comments and submissions. The controversiality model took in a TF-IDF weighted vector of the comments and was able to achieve a high level of predictive strength, although that seemed to be a result, in large part, due to the class imbalance. We believe that the deleted and removed comments were likely controversial, and so the remaining controversial ones were not being predicted as well as we would hope. For the sentiment model we decided to use Vader-Sentiment lexicon to label our data rather than relying exclusively on pretrained models. The dataset we used to classify sentiment appeared to label more similarly to the Vivek model, with the plurality being negative but showing a larger proportion of neutral material. Several ML algorithms were then used to train the labelled dataset and we ultimately saw great success with test error at slightly above 8%.\n Figure 5.1 : ROC Curves for Different Predictive Models Used in Predicting Controversiality \nMoving forward, we feel that we can further improve our models via the use of over and under sampling techniques to deal with the class imbalance. Additionally, we believe that we can improve on a predictive model for karma scores that we attempted, although at present its accuracy can be described only as pitiful."
  },
  {
    "objectID": "nlp.html",
    "href": "nlp.html",
    "title": "Natural Language Processing Analysis",
    "section": "",
    "text": "In this round of analysis we worked with three  Natural Language Processing (NLP)  techniques namely\n\n\nTopic Modeling\n\n\nNamed Entity Recognition (NER)\n\n\nSentiment Analysis\n\n\nOur results from both Topic Modeling and NER indicate widespread consumption of news on the ongoing Russia-Ukraine Conflict. In both cases we saw that the topics our model saw and the entities being referenced most often were either directly involved or adjacent to said conflict. We did see that when subsetting the data around events of the conflict, the topics our models produce had less overlap. Lastly, our Sentiment Analysis on submissions and comments related to the conflict suggested that submissions tended to be more negative while comments had an equal distribution of both negative and positive sentiments. The models appeared to demonstrate low neutrality in both submissions and comments."
  },
  {
    "objectID": "nlp.html#executive-summary",
    "href": "nlp.html#executive-summary",
    "title": "Natural Language Processing Analysis",
    "section": "",
    "text": "In this round of analysis we worked with three  Natural Language Processing (NLP)  techniques namely\n\n\nTopic Modeling\n\n\nNamed Entity Recognition (NER)\n\n\nSentiment Analysis\n\n\nOur results from both Topic Modeling and NER indicate widespread consumption of news on the ongoing Russia-Ukraine Conflict. In both cases we saw that the topics our model saw and the entities being referenced most often were either directly involved or adjacent to said conflict. We did see that when subsetting the data around events of the conflict, the topics our models produce had less overlap. Lastly, our Sentiment Analysis on submissions and comments related to the conflict suggested that submissions tended to be more negative while comments had an equal distribution of both negative and positive sentiments. The models appeared to demonstrate low neutrality in both submissions and comments."
  },
  {
    "objectID": "nlp.html#text-pre-processing",
    "href": "nlp.html#text-pre-processing",
    "title": "Natural Language Processing Analysis",
    "section": "Text Pre-Processing",
    "text": "Text Pre-Processing\nWe started off our analysis by assessing the number of words in the title and body columns of our datasets. They are represented in the two graphs below.\nBoth these graphs in figures 1 and 2 are right skewed, reflecting that a major amount of both titles and comments are below 50 words.\nNext, we moved on to preprocessing. In order to do the natural language processing (NLP) tasks, the corpuses of comments and submissions needed to face several steps of processing as listed below:\n\n\nRemove stop words\n\n\nRemove other languages\n\n\nRemove special characters\n\n\nConvert text to lower case\n\n\nLemmatize words\n\n\nThe above listed preprocessing steps were applied to text portions of our submissions and comments datasets, on the columns title and body respectively. We used the johnsnowlabs package to conduct our preprocessing and implemented our preprocessing task through a pipeline. systematically converted to document file types and then tokenized. This transformed the data into a bag of words form and was used to accomplish the business goals below.\nAfter the preprocessing, we assessed the 15 most commonly occurring words in both the submissions and comments dataset as displayed in table 1.\n Table 3.1 : Most Common Words in the Submissions Datasets \n Table 3.2 : Most Common Words in the Comments Datasets \nIt is evident from both tables 3.1 and 3.2 that the Russia-Ukraine Conflict dominates both in the submissions and comments datasets. This result agrees with our EDA analysis. Even when constructing a Word Cloud with the Submissions dataset, we found similar trends as displayed in figure 3.3 below.\n\nFigure 3.3 : Word Cloud of Submissions Dataset\n\n\n Digging in further, we also evaluated the most important words using the Term Frequency - Inverse Document Frequency (TF-IDF)  methodology and obtained the following results.\n Table 3.3 : Most Important Words in the Datasets \nThe TF-IDF doesn’t reflect the dominance of war related submissions and comments obtained above. This will be further explored through our following analysis of dominant topics in the data."
  },
  {
    "objectID": "nlp.html#key-topics-in-submissions",
    "href": "nlp.html#key-topics-in-submissions",
    "title": "Natural Language Processing Analysis",
    "section": "Key Topics in Submissions",
    "text": "Key Topics in Submissions\nWe employed topic modeling through Latent Dirchlet Allocation (LDA) on the cleaned titles of our submissions dataset and obtained 7 topic groups, which saw most of the groups dealing with the Russia-Ukraine Conflict, addressing its different facets. The topics were:\n\n\nTopic 1: deals with the Russia-Ukraine Conflict and nuclear weapons, power plants\n\n\nTopic 2: deals with the Russia-Ukraine Conflict and the media/news coverage on the political leaders\n\n\nTopic 3: deals with the Russia-Ukraine Conflict and oil imports, the EU, laws, and regulation\n\n\nTopic 4: deals with the Russia-Ukraine Conflict as well as Twitter and Elon Musk\n\n\nTopic 5: news related to covid, China, and Korea\n\n\nTopic 6: deals with the Russia-Ukraine Conflict and neighbouring countries\n\n\nTopic 7: the Russia-Ukraine Conflict and the Qatar World Cup\n\n\nAs stated, several of these topics related to the Russia-Ukraine Conflict directly. This high centralization of topic matter seemed to affect topics 4 and 7 which appeared to combine disparate subjects. The LDA topic visualization is displayed below.\n\nFigure 3.4 : LDA Topic Visualization for Submissions Datset\n\nFurther viewing the , utilizing google trends data we were able to determine events in the conflict which most affected internet traffic. Using this we sought to examine how such key events affected the subreddit’s submissions, ie news coverage. The first event selected was the start of the war, which we used to create a subset of the data that encompassed the first two weeks of the Russia-Ukraine Conflict and was modeled with only a topic count of 5. Its results saw the following topics:\n\n\nTopics 1, 2, 3, 5 all relating to the Russia-Ukraine Conflict, with repeated terms (political leaders of both countries, cities in both countries, and weapons - missiles, nuclear, military, troops)\n\n\nTopic 4 provided an interesting insight - it includes news related to Indian students in Ukraine, as well as Starlink and Elon Musk.\n\n\nTo provide context, topic 4 highlighted the early involvement of Musk in providing his satellite services to the country and the Nazi Azov battalion accosting foreign students attempting to flee.\n\nFigure 3.5 : LDA Topic Visualization for Submissions Datset During the Start of the War\n\n The second event we used from the trends coverage, was when Russia began withdrawing. After applying LDA once more, we saw the topic modelling results indicated:\n\n\nTopics 1, 2, 3, 4 all relating to Russia-Ukraine Conflict, with repeated terms (political leaders of both countries, cities in both countries, and weapons - missiles, nuclear, military, troops)\n\n\nTopic 5 : news related to North Korea firing a ballistic missile over Japan.\n\n\nAs was stated, North Korea had fired a ballistic missile over Japan in the same time period and had been rapidly increasing the rate of testing. This appears to suggest that the smaller subsets of data might be more useful in capturing specific stories without overlapping the conflict with other topics.\n\nFigure 3.6 : LDA Topic Visualization for Submissions Datset When Russian Troops Started Receding"
  },
  {
    "objectID": "nlp.html#identifying-key-entities-in-the-datasets",
    "href": "nlp.html#identifying-key-entities-in-the-datasets",
    "title": "Natural Language Processing Analysis",
    "section": "Identifying Key Entities in the Datasets",
    "text": "Identifying Key Entities in the Datasets\nThe top 12 entities for person, location and organization are displayed in table 3. We used BERT  pretrained  Named Entity Recognition (NER)  models to accomplish this. Initially, when feeding the pre trained model with our pre-processed data, we found that Russia and Ukraine didn’t feature as one of the top entities. Upon re-running the model pipeline with unprocessed data, the results were more familiar.\nGiven the density of topics demonstrated by the previous section’s analysis, the focus of the entities on the conflict should not come as a surprise. Using NER, we saw that just as the topics were heavily saturated with the Russia-Ukraine Conflict, the results for most frequently mentioned entities demonstrated this as well.\nIn table 3.4, we can clearly see the prevalence of Putin, Biden, and Zelensky; but these persons are not the only noteworthy results. We also can see British political figures, Boris Johnson and Liz Truss, taking a prominent role in the results. Considering the domain table from our EDA, British news coverage made up some of the most popular sources for posts. This could be the reason for the British political figures being highlighted by the NER model.\nWhen examining the locations results, we saw Ukraine and Russia occur with much greater frequency than the other states, followed by the United States, which appeared twice, and China to a lesser extent.\nLastly our organization based model appeared to return the most mixed results. The top three results were organizations that could easily indicate stories related to the Russia-Ukraine Conflict, but after this the results become less than ideal. Ukrainian cities, Russia, Covid, and Elon Musk were included in the results. This could be seen as a short coming of the models, but also testifies to the prevalence of the conflict in the subreddits submissions. It should also be noted that different n-grams and misspellings resulted in less refined results, and, as stated, the organization results were rather mixed. Table 3.4 displays the entities in the decreasing order of occurence.\n Table 3.4 : Top Entities in Submissions"
  },
  {
    "objectID": "nlp.html#assessing-sentiments-on-war-related-comments-and-submissions",
    "href": "nlp.html#assessing-sentiments-on-war-related-comments-and-submissions",
    "title": "Natural Language Processing Analysis",
    "section": "Assessing Sentiments on War Related Comments and Submissions",
    "text": "Assessing Sentiments on War Related Comments and Submissions\nBased on our previous analysis in the EDA, it has been determined that the live threads in our subreddit were predisposed towards the Russia-Ukraine Conflict. The dominance of said conflict in the submissions was further supported by topic modeling results. We expected that such a topic would lead itself towards strong sentiments and were affirmed in that expectation through employing pre-trained sentiment models as shown in table 3.5 below.\n Table 3.5 : Sentiment Analysis Results From Live Thread Comments \nAlthough the Vivek analyzer categorized more comments as neutral, overall users appeared to have stronger sentiments, generally of a negative sort. This negative pattern was demonstrated to an equal extent by both the IMDB and Twitter models, without significant difference.\nFurther sentiment analysis was done on submissions related to the Russia-Ukraine Conflict and their related comments, excluding the above analyzed live threads. The models appear to have similar trends, but it should be noted that that for the Twitter and IMDB models the submission titles, those of the articles being shared, were significantly more negative than the comments. Overall the title results for each model indicated 25.22% more overall negative sentiment than the related comment sentiment results, all of which can be seen in table 3.6 below.\n Table 3.6 : Sentiment Analysis of War-Related Submissions and Comments \nThe stark difference in results between the Vivek Model and the Twitter and IMDB models is more apparent here. We assumed that titles would have demonstrated more neutral sentiment, as the Vivek model demonstrated; but assuming that the results IMDB and Twitter models are more reliable, marketing tactics may be the culprit for the perceived negativity. Given how article titles have increasingly become the method of user interaction in social media, drawing attention with inflammatory language can be a tactic for increasing user interest. This perceived negativity might also be explained by the dominance of Western Media outlets in this subreddit, that was seen in the EDA analysis.\nWe attempted a lexicon based approach, but due to logistical issues we instead went forward with pretrained models  sentimentdl_use_twitter, sentimentdl_use_imdb and  VivekSentimentAnalyzer . In the future, we believe that training our own sentiment analyzer could improve the results."
  },
  {
    "objectID": "ml.html",
    "href": "ml.html",
    "title": "Machine Learning Analysis",
    "section": "",
    "text": "For our Machine Learning (ML) Analysis we accomplished two separate tasks, one predicting comment sentiment and the second predicting comment controversy. We saw that an SVM model using cross validation was best at predicting comment sentiment, leading in all grading metrics we checked. This sentiment prediction model was saved following the results, with its training. For the models predicting comment controversy, we saw high overall accuracy, but that seemed to have been a result of class imbalance. We describe where the large imbalance between controversial and noncontroversial comments may have come from, and how it may have affected our results. \nAdditionally we attempted to implement a model outside of our business goals to see whether we would be able to predict karma scores. While we saw promising results for the first two, our karma scores models faced several issues and had what we considered ‘pitiful’ results, due to its low accuracy. We have chosen instead to include it in the further analysis section below."
  },
  {
    "objectID": "ml.html#executive-summary",
    "href": "ml.html#executive-summary",
    "title": "Machine Learning Analysis",
    "section": "",
    "text": "For our Machine Learning (ML) Analysis we accomplished two separate tasks, one predicting comment sentiment and the second predicting comment controversy. We saw that an SVM model using cross validation was best at predicting comment sentiment, leading in all grading metrics we checked. This sentiment prediction model was saved following the results, with its training. For the models predicting comment controversy, we saw high overall accuracy, but that seemed to have been a result of class imbalance. We describe where the large imbalance between controversial and noncontroversial comments may have come from, and how it may have affected our results. \nAdditionally we attempted to implement a model outside of our business goals to see whether we would be able to predict karma scores. While we saw promising results for the first two, our karma scores models faced several issues and had what we considered ‘pitiful’ results, due to its low accuracy. We have chosen instead to include it in the further analysis section below."
  },
  {
    "objectID": "ml.html#supervised-sentiment-learning",
    "href": "ml.html#supervised-sentiment-learning",
    "title": "Machine Learning Analysis",
    "section": "Supervised Sentiment Learning",
    "text": "Supervised Sentiment Learning\nFor training a sentiment classifier, we needed sentiment labels on part of our dataset. To generate these labels, we used the vaderSentiment python package and tweaked the cluster bootstrap script to install the packages on the driver nodes. A portion of the comments dataset (20%) was labelled using this Vader-Sentiment lexicon. These comments were then used to train a sentiment classifier using supervised learning models namely Logistic Regression, Multinomial Naive Bayes and Support Vector Machines (SVM). After applying 5-fold cross-validation and tuning hyperparameters, we obtained evaluation metrics for the three models as displayed below in table 1.\n Table 4.1 : Evaluation Metrics for Supervised Sentiment Models \nFrom table 4.1, it is evident that Support Vector Machines performed the best. This model was then saved and used to label the remaining 80% of the comments dataset. Figure 1 portrays the distribution of sentiments across the comments dataset.\nThis model classifies more comments as neutral as compared to the pre-trained models deployed in the Natural Language Processing analysis section. This is reflected in figure 2 where the sentiment distribution of live thread comments is presented.\nVader-Sentiment lexicon is optimized to work with tweets. Despite this, we observe no similarity with the pre-trained twitter model and the Vader-Sentiment model."
  },
  {
    "objectID": "ml.html#predicting-controversiality",
    "href": "ml.html#predicting-controversiality",
    "title": "Machine Learning Analysis",
    "section": "Predicting Controversiality",
    "text": "Predicting Controversiality\nTo accomplish this goal, we converted the text data to TF-IDF weighted vectors of the terms and used them as the input for a variety of models. Testing Logistic Regression, LinearSVC, and NaiveBayes models we sought to predict the controversiality in our comments, the results of which are listed below.\n Figure 4.3 : ROC Curves for Different Models \nAlthough the ROC curves would indicate that logistic regression was the best performing model, that may be a result of the class imbalance in controversiality. During our preprocessing steps we removed comments that were listed as ‘removed’ or ‘deleted’. We suspect that such comments removal likely affected the predictive capacity of our data set, compounding on the already existing class balance issues.\n Table 4.2 : Evaluation Metrics for Controversiality Prediction Models \nIn this table we see that both Logistic Regression and Linear SVC have seemingly perfect recall scores, a result of them almost entirely ignoring comments with controversiality  labeled as 1. This appears to confirm our supposition that the underlying class imbalance in our dataset has led to biased models. We believe that this could be further improved in future analysis through the institution of oversampling or undersampling methods or training models such as Complement Naive Bayes that account for class imbalances."
  },
  {
    "objectID": "ml.html#further-analysis-predicting-karma-scores",
    "href": "ml.html#further-analysis-predicting-karma-scores",
    "title": "Machine Learning Analysis",
    "section": "Further Analysis (Predicting Karma Scores)",
    "text": "Further Analysis (Predicting Karma Scores)\nWe also aimed at constructing a regression model to predict the score column in our comments dataset. For this purpose, we used a multitude of predictors such as sentiment_label (obtained from previously trained sentiment classifier), gilded, and distinguished to name a few. Our initial implementation of Linear Regression and Decision Tree models produced sub-optimal (R-squared value of 7%) results. We plan to further work on this task by tuning hyperparameters, assessing scaling requirements and incorporating additional predictors to obtain a well-performing regression model."
  }
]